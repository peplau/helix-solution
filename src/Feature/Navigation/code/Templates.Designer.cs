
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Sitecore.Feature.Navigation.Templates
{
  #region Designer generated code

  using System;
  using Sitecore;
  using Sitecore.Diagnostics;
  using Sitecore.Data.Items;
  using Sitecore.Data.Fields;
  using Sitecore.Data;
  
      
  /// <summary>Represents the "_Link" template.</summary>
  public partial class __Link : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{14BCE2C8-403A-4AF2-96A6-3E8B61BFD472}");

    public __Link(Item item) : base(item) {
    }

    public static class FieldIds {
      
        public static readonly ID Link = ID.Parse("{27C1F6E7-5FA3-49BF-B49C-CFB7E1CD2FB2}");
  
    }
    public static class FieldNames {
      
        public static readonly string Link = "Link";
  
    }
    
    /// <summary>Gets or sets the "Link" field.</summary>
    public string Link {
      get 
      {
        return this.InnerItem[FieldIds.Link];
      }
      set 
      {
        this.InnerItem[FieldIds.Link] = value;
      }
    }
  
    public static __Link Create(Item item) 
    {
      return new __Link(item);
    }

    public static implicit operator Item (__Link item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator __Link(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "_Navigable" template.</summary>
  public partial class __Navigable : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{0D26B856-11D4-4042-B144-89264DCE054A}");

    public __Navigable(Item item) : base(item) {
    }

    public static class FieldIds {
      
        public static readonly ID NavigationTitle = ID.Parse("{F4A40058-8ECB-4D9D-A4ED-9EA2D9D68A04}");
  
        public static readonly ID ShowInNavigation = ID.Parse("{060CE5B9-AE98-451E-9CDF-38A85A75336F}");
  
    }
    public static class FieldNames {
      
        public static readonly string NavigationTitle = "Navigation Title";
  
        public static readonly string ShowInNavigation = "Show in Navigation";
  
    }
    
    /// <summary>Gets or sets the "Navigation Title" field.</summary>
    public string NavigationTitle 
    {
      get 
      {
        return this.InnerItem[FieldIds.NavigationTitle];
      }
      set
      {
        this.InnerItem[FieldIds.NavigationTitle] = value;
      }
    }
  
    /// <summary>Gets or sets the "Show in Navigation" field.</summary>
    public bool ShowInNavigation 
    {
      get 
      {
        return MainUtil.GetBool(this.InnerItem[FieldIds.ShowInNavigation], false);
      }
      set 
      {
        this.InnerItem[FieldIds.ShowInNavigation] = value ? "1" : string.Empty;
      }
    }
  
    public static __Navigable Create(Item item) 
    {
      return new __Navigable(item);
    }

    public static implicit operator Item (__Navigable item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator __Navigable(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "_Link Menu Item" template.</summary>
  public partial class __LinkMenuItem : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{E3C3A8C0-746E-417D-B715-F4542E8C61B2}");

    public __LinkMenuItem(Item item) : base(item) {
    }

    public static class FieldIds {
      
        public static readonly ID IconCss = ID.Parse("{4C0A91DF-2B4B-4A02-8231-AE8FF28A5E46}");
  
    }
    public static class FieldNames {
      
        public static readonly string IconCss = "Icon CSS";
  
    }
    
    /// <summary>Gets or sets the "Icon CSS" field.</summary>
    public string IconCss 
    {
      get 
      {
        return this.InnerItem[FieldIds.IconCss];
      }
      set
      {
        this.InnerItem[FieldIds.IconCss] = value;
      }
    }
  
    public static __LinkMenuItem Create(Item item) 
    {
      return new __LinkMenuItem(item);
    }

    public static implicit operator Item (__LinkMenuItem item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator __LinkMenuItem(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "_Navigation Root" template.</summary>
  public partial class __NavigationRoot : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{CD149544-2409-471F-ADDE-83B14E1E7C79}");

    public __NavigationRoot(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    public static class FieldNames {
      
    }
    
    public static __NavigationRoot Create(Item item) 
    {
      return new __NavigationRoot(item);
    }

    public static implicit operator Item (__NavigationRoot item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator __NavigationRoot(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Source Configuration" template.</summary>
  public partial class SourceConfiguration : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{CABDDF2E-A47D-4B13-9A01-33218C777F8F}");

    public SourceConfiguration(Item item) : base(item) {
    }

    public static class FieldIds {
      
        public static readonly ID Source = ID.Parse("{7CEC52E0-D460-4A39-AB8F-4C227659F9CE}");
  
    }
    public static class FieldNames {
      
        public static readonly string Source = "Source";
  
    }
    
    /// <summary>Gets or sets the "Source" field.</summary>
    public string Source 
    {
      get 
      {
        return this.InnerItem[FieldIds.Source];
      }
      set
      {
        this.InnerItem[FieldIds.Source] = value;
      }
    }
  
    public static SourceConfiguration Create(Item item) 
    {
      return new SourceConfiguration(item);
    }

    public static implicit operator Item (SourceConfiguration item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator SourceConfiguration(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Source Settings Folder" template.</summary>
  public partial class SourceSettingsFolder : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{5045928C-0E96-4AF1-B172-5E6015447A19}");

    public SourceSettingsFolder(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    public static class FieldNames {
      
    }
    
    public static SourceSettingsFolder Create(Item item) 
    {
      return new SourceSettingsFolder(item);
    }

    public static implicit operator Item (SourceSettingsFolder item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator SourceSettingsFolder(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "ParametersTemplate_CssClass" template.</summary>
  public partial class ParametersTemplate_CssClass : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{DD19DAA7-E386-42B6-A621-DC054E438AB9}");

    public ParametersTemplate_CssClass(Item item) : base(item) {
    }

    public static class FieldIds {
      
        public static readonly ID CSSClass = ID.Parse("{C7184AB0-5A12-40C1-86D2-8A60FB46826A}");
  
    }
    public static class FieldNames {
      
        public static readonly string CSSClass = "CSSClass";
  
    }
    
    /// <summary>Gets or sets the "CSSClass" field.</summary>
    public string CSSClass 
    {
      get 
      {
        return this.InnerItem[FieldIds.CSSClass];
      }
      set
      {
        this.InnerItem[FieldIds.CSSClass] = value;
      }
    }
  
    public static ParametersTemplate_CssClass Create(Item item) 
    {
      return new ParametersTemplate_CssClass(item);
    }

    public static implicit operator Item (ParametersTemplate_CssClass item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator ParametersTemplate_CssClass(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
  
  #endregion
}

#pragma warning restore 1591
