
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Sitecore.Basis.Multisite.Templates
{
  #region Designer generated code

  using System;
  using Sitecore;
  using Sitecore.Diagnostics;
  using Sitecore.Data.Items;
  using Sitecore.Data.Fields;
  using Sitecore.Data;
  
      
  /// <summary>Represents the "Datasource Configuration" template.</summary>
  public partial class DatasourceConfiguration : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{C14AE427-3F58-40DE-922E-39E143A51434}");

    public DatasourceConfiguration(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID DatasourceLocation = ID.Parse("{41125DE7-8468-48C7-8241-704127F8FCE1}");

      public static readonly ID DatasourceTemplate = ID.Parse("{86127D9A-95ED-479E-9037-C3BF014A806B}");

    }
    
    /// <summary>Gets the "Datasource Location" field.</summary>
    public DatasourceField DatasourceLocation 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.DatasourceLocation];
      }
    }
  
    /// <summary>Gets the "Datasource Template" field.</summary>
    public InternalLinkField DatasourceTemplate 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.DatasourceTemplate];
      }
    }
  
    public static DatasourceConfiguration Create(Item item) 
    {
      return new DatasourceConfiguration(item);
    }

    public static implicit operator Item (DatasourceConfiguration item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator DatasourceConfiguration(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Site Settings Root" template.</summary>
  public partial class SiteSettingsRoot : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{3F80C671-2061-48EE-9951-80B46AC42714}");

    public SiteSettingsRoot(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    
    public static SiteSettingsRoot Create(Item item) 
    {
      return new SiteSettingsRoot(item);
    }

    public static implicit operator Item (SiteSettingsRoot item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator SiteSettingsRoot(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Datasource Settings Folder" template.</summary>
  public partial class DatasourceSettingsFolder : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{C0F7A8C5-8BBF-4416-AC3F-C221691EDDB4}");

    public DatasourceSettingsFolder(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    
    public static DatasourceSettingsFolder Create(Item item) 
    {
      return new DatasourceSettingsFolder(item);
    }

    public static implicit operator Item (DatasourceSettingsFolder item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator DatasourceSettingsFolder(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "_SiteSettings" template.</summary>
  public partial class __SiteSettings : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{8764779E-2DEE-461D-BBD0-A7B2DE606B72}");

    public __SiteSettings(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    
    public static __SiteSettings Create(Item item) 
    {
      return new __SiteSettings(item);
    }

    public static implicit operator Item (__SiteSettings item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator __SiteSettings(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "_Site" template.</summary>
  public partial class __Site : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{42F16E0A-2C86-4679-AFF9-CC703AB0B16D}");

    public __Site(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    
    public static __Site Create(Item item) 
    {
      return new __Site(item);
    }

    public static implicit operator Item (__Site item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator __Site(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Source Configuration" template.</summary>
  public partial class SourceConfiguration : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{CABDDF2E-A47D-4B13-9A01-33218C777F8F}");

    public SourceConfiguration(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID Source = ID.Parse("{7CEC52E0-D460-4A39-AB8F-4C227659F9CE}");

    }
    
    /// <summary>Gets or sets the "Source" field.</summary>
    public string Source 
    {
      get 
      {
        return this.InnerItem[FieldIds.Source];
      }
      set
      {
        this.InnerItem[FieldIds.Source] = value;
      }
    }
  
    public static SourceConfiguration Create(Item item) 
    {
      return new SourceConfiguration(item);
    }

    public static implicit operator Item (SourceConfiguration item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator SourceConfiguration(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Source Settings Folder" template.</summary>
  public partial class SourceSettingsFolder : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{5045928C-0E96-4AF1-B172-5E6015447A19}");

    public SourceSettingsFolder(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    
    public static SourceSettingsFolder Create(Item item) 
    {
      return new SourceSettingsFolder(item);
    }

    public static implicit operator Item (SourceSettingsFolder item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator SourceSettingsFolder(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Rendering Options" template.</summary>
  public partial class RenderingOptions : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{D1592226-3898-4CE2-B190-090FD5F84A4C}");

    public RenderingOptions(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID Editable = ID.Parse("{308E88F5-CD6E-4F8F-BAFE-95A47DEDEFDC}");

      public static readonly ID DatasourceLocation = ID.Parse("{B5B27AF1-25EF-405C-87CE-369B3A004016}");

      public static readonly ID DatasourceTemplate = ID.Parse("{1A7C85E5-DC0B-490D-9187-BB1DBCB4C72F}");

      public static readonly ID CompatibleRenderings = ID.Parse("{E441ABE7-2CA3-4640-AE26-3789967925D7}");

      public static readonly ID PageEditorButtons = ID.Parse("{A2F5D9DF-8CBA-4A1D-99EB-51ACB94CB057}");

      public static readonly ID EnableDatasourceQuery = ID.Parse("{F172B787-7B88-4BD5-AE4D-6308E102EF11}");

    }
    
    /// <summary>Gets or sets the "Editable" field.</summary>
    public bool Editable 
    {
      get 
      {
        return MainUtil.GetBool(this.InnerItem[FieldIds.Editable], false);
      }
      set 
      {
        this.InnerItem[FieldIds.Editable] = value ? "1" : string.Empty;
      }
    }
  
    /// <summary>Gets the "Datasource Location" field.</summary>
    public DatasourceField DatasourceLocation 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.DatasourceLocation];
      }
    }
  
    /// <summary>Gets the "Datasource Template" field.</summary>
    public InternalLinkField DatasourceTemplate 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.DatasourceTemplate];
      }
    }
  
    /// <summary>Gets the "Compatible Renderings" field.</summary>
    public MultilistField CompatibleRenderings 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.CompatibleRenderings];
      }
    }
  
    /// <summary>Gets the "Page Editor Buttons" field.</summary>
    public MultilistField PageEditorButtons 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.PageEditorButtons];
      }
    }
  
    /// <summary>Gets or sets the "Enable Datasource Query" field.</summary>
    public bool EnableDatasourceQuery 
    {
      get 
      {
        return MainUtil.GetBool(this.InnerItem[FieldIds.EnableDatasourceQuery], false);
      }
      set 
      {
        this.InnerItem[FieldIds.EnableDatasourceQuery] = value ? "1" : string.Empty;
      }
    }
  
    public static RenderingOptions Create(Item item) 
    {
      return new RenderingOptions(item);
    }

    public static implicit operator Item (RenderingOptions item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator RenderingOptions(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "Standard Rendering Parameters" template.</summary>
  public partial class StandardRenderingParameters : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{8CA06D6A-B353-44E8-BC31-B528C7306971}");

    public StandardRenderingParameters(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID Placeholder = ID.Parse("{E42027F4-766D-45A7-8CF4-29E5C94326F7}");

      public static readonly ID DataSource = ID.Parse("{0793DCFF-0EE7-48AD-B9D4-EF1DD24EB59B}");

      public static readonly ID AdditionalParameters = ID.Parse("{485E33D4-79F1-428F-8258-2CB29BB7CC6B}");

      public static readonly ID Caching = ID.Parse("{3094D236-5985-4C4F-AE6A-E30740885532}");

      public static readonly ID Personalization = ID.Parse("{C502BDEB-F5DA-4AD0-8095-D7CC1D0E1EEC}");

      public static readonly ID Tests = ID.Parse("{0FA4635B-8BF4-46DF-994D-621B76F0A7AD}");

    }
    
    /// <summary>Gets or sets the "Placeholder" field.</summary>
    public string Placeholder 
    {
      get 
      {
        return this.InnerItem[FieldIds.Placeholder];
      }
      set
      {
        this.InnerItem[FieldIds.Placeholder] = value;
      }
    }
  
    /// <summary>Gets or sets the "Data Source" field.</summary>
    public string DataSource {
      get 
      {
        return this.InnerItem[FieldIds.DataSource];
      }
      set 
      {
        this.InnerItem[FieldIds.DataSource] = value;
      }
    }
  
    /// <summary>Gets or sets the "Additional Parameters" field.</summary>
    public string AdditionalParameters {
      get 
      {
        return this.InnerItem[FieldIds.AdditionalParameters];
      }
      set 
      {
        this.InnerItem[FieldIds.AdditionalParameters] = value;
      }
    }
  
    /// <summary>Gets or sets the "Caching" field.</summary>
    public string Caching {
      get 
      {
        return this.InnerItem[FieldIds.Caching];
      }
      set 
      {
        this.InnerItem[FieldIds.Caching] = value;
      }
    }
  
    /// <summary>Gets or sets the "Personalization" field.</summary>
    public string Personalization {
      get 
      {
        return this.InnerItem[FieldIds.Personalization];
      }
      set 
      {
        this.InnerItem[FieldIds.Personalization] = value;
      }
    }
  
    /// <summary>Gets the "Tests" field.</summary>
    public InternalLinkField Tests 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.Tests];
      }
    }
  
    public static StandardRenderingParameters Create(Item item) 
    {
      return new StandardRenderingParameters(item);
    }

    public static implicit operator Item (StandardRenderingParameters item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator StandardRenderingParameters(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
  
  #endregion
}

#pragma warning restore 1591
